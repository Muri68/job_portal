# Generated by Django 5.1.2 on 2025-10-10 15:35

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('role', models.CharField(choices=[('job_seeker', 'Job Seeker'), ('site_admin', 'Site Admin'), ('employer', 'Employer'), ('recruiter', 'Recruiter')], default='job_seeker', max_length=30)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobSeekerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('portfolio_url', models.URLField(blank=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to=accounts.models.upload_to_resume, validators=[django.core.validators.FileExtensionValidator(['pdf'])])),
                ('cover_letter', models.TextField(blank=True, null=True)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('both', 'Both')], default='email', max_length=20)),
                ('years_of_experience', models.CharField(choices=[('entry', 'Entry Level (0-2 years)'), ('mid', 'Mid Level (3-5 years)'), ('senior', 'Senior Level (6-9 years)'), ('executive', 'Executive (10+ years)')], max_length=20)),
                ('highest_education', models.CharField(choices=[('highschool', 'High School'), ('associate', 'Associate Degree'), ('bachelor', "Bachelor's Degree"), ('master', "Master's Degree"), ('phd', 'PhD')], max_length=20)),
                ('key_skills', models.TextField(blank=True, help_text='Enter skills separated by commas, e.g., Python, Django, SQL', null=True)),
                ('location', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jobseeker_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

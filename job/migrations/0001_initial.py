# Generated by Django 5.1.2 on 2025-10-10 15:35

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='About Our Company', max_length=200)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('image', models.ImageField(blank=True, help_text='Main about us image (recommended: 800x600px)', null=True, upload_to='about/us/')),
                ('mission', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('vision', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='CompanyStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('bi-people', 'Teamwork'), ('bi-lightbulb', 'Innovation'), ('bi-shield-check', 'Integrity'), ('bi-heart', 'Passion'), ('bi-award', 'Excellence'), ('bi-graph-up', 'Growth'), ('bi-hand-thumbs-up', 'Quality'), ('bi-clock', 'Commitment'), ('bi-globe', 'Global'), ('bi-cup', 'Success')], max_length=50)),
                ('number', models.CharField(help_text='e.g., 100+, 5000, 99%', max_length=50)),
                ('label', models.CharField(help_text='e.g., Projects Completed, Happy Clients', max_length=100)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Company Stat',
                'verbose_name_plural': 'Company Stats',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('address', 'Address'), ('phone', 'Phone'), ('email', 'Email'), ('hours', 'Business Hours')], max_length=20)),
                ('title', models.CharField(help_text='e.g., Main Office, Support Line', max_length=100)),
                ('value', models.TextField(help_text='Contact information')),
                ('icon', models.CharField(default='bi-geo-alt', help_text='Bootstrap icon class', max_length=50)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Contact Information',
                'verbose_name_plural': 'Contact Information',
                'ordering': ['order', 'contact_type'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('closed', 'Closed')], default='new', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('short_description', models.TextField(blank=True, max_length=500)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('location', models.CharField(max_length=200)),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('remote', 'Remote')], max_length=50)),
                ('workplace_type', models.CharField(choices=[('onsite', 'On Site'), ('remote', 'Remote'), ('hybrid', 'Hybrid')], max_length=50)),
                ('salary_start', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('publish', 'Publish'), ('draft', 'Draft'), ('inactive', 'Inactive')], default='publish', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application_deadline', models.DateField()),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OurValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.CharField(choices=[('bi-people', 'Teamwork'), ('bi-lightbulb', 'Innovation'), ('bi-shield-check', 'Integrity'), ('bi-heart', 'Passion'), ('bi-award', 'Excellence'), ('bi-graph-up', 'Growth'), ('bi-hand-thumbs-up', 'Quality'), ('bi-clock', 'Commitment'), ('bi-globe', 'Global'), ('bi-cup', 'Success')], help_text='Select an icon for this value', max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which values are displayed')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Our Value',
                'verbose_name_plural': 'Our Values',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Tech Recruitment UK', max_length=100)),
                ('contact_email', models.EmailField(default='info@techrecruitment.com', max_length=254)),
                ('support_email', models.EmailField(default='support@techrecruitment.com', max_length=254)),
                ('phone_number', models.CharField(default='+1 (123) 456-7890', max_length=20)),
                ('address', models.TextField(default='1234 Street Name, City, State, Country 12345')),
                ('business_hours', models.TextField(default='Monday - Friday: 9:00 AM - 6:00 PM')),
                ('map_embed_code', models.TextField(blank=True, help_text='Google Maps embed code')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Site Setting',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, help_text='Team member photo (recommended: 400x400px)', null=True, upload_to='about/team/')),
                ('bio', models.TextField(help_text='Short bio/description')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which team members are displayed')),
                ('is_active', models.BooleanField(default=True)),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn Profile')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter Profile')),
                ('github_url', models.URLField(blank=True, verbose_name='GitHub Profile')),
                ('portfolio_url', models.URLField(blank=True, verbose_name='Portfolio Website')),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_name', models.CharField(max_length=200)),
                ('applicant_email', models.EmailField(max_length=254)),
                ('applicant_phone', models.CharField(blank=True, max_length=20)),
                ('current_company', models.CharField(blank=True, max_length=200, verbose_name='Current Company')),
                ('current_position', models.CharField(blank=True, max_length=200, verbose_name='Current Position')),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name='Years of Experience')),
                ('linkedin_profile', models.URLField(blank=True, verbose_name='LinkedIn Profile')),
                ('github_profile', models.URLField(blank=True, verbose_name='GitHub Profile')),
                ('portfolio_url', models.URLField(blank=True, verbose_name='Portfolio URL')),
                ('resume', models.FileField(help_text='Upload your resume (PDF)', upload_to='resumes/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('cover_letter', models.TextField(help_text='Why are you interested in this position?', verbose_name='Cover Letter')),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', '📝 Pending'), ('reviewed', '👀 Reviewed'), ('shortlisted', '⭐ Shortlisted'), ('interview', '💼 Interview'), ('rejected', '❌ Rejected'), ('accepted', '✅ Accepted')], default='pending', max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('last_contact_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes about this application')),
                ('status_changed_at', models.DateTimeField(blank=True, null=True)),
                ('last_status_change', models.CharField(blank=True, max_length=100, verbose_name='Last Status Change')),
                ('status_change_notification_sent', models.BooleanField(default=False)),
                ('status_change_read', models.BooleanField(default=False)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='job.job')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('date_time', models.DateTimeField()),
                ('interview_type', models.CharField(choices=[('online', 'Online'), ('onsite', 'On Site')], max_length=20)),
                ('location', models.CharField(blank=True, help_text='Required if interview is On Site', max_length=255)),
                ('meeting_link', models.URLField(blank=True, help_text='Required if interview is Online')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_interviews', to=settings.AUTH_USER_MODEL)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='job.jobapplication')),
            ],
            options={
                'verbose_name': 'Interview',
                'verbose_name_plural': 'Interviews',
                'ordering': ['-date_time'],
            },
        ),
        migrations.AddField(
            model_name='job',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.jobcategory'),
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this job opportunity', null=True)),
                ('category', models.CharField(choices=[('interested', 'Interested'), ('applying_soon', 'Applying Soon'), ('research', 'Need to Research'), ('comparison', 'For Comparison'), ('favorite', 'Favorite')], default='interested', max_length=20)),
                ('reminder_date', models.DateTimeField(blank=True, help_text='Set a reminder for this job', null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by_users', to='job.job')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Saved Job',
                'verbose_name_plural': 'Saved Jobs',
                'ordering': ['-saved_at'],
            },
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['status', 'applied_at'], name='job_jobappl_status_931e91_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['applicant_email'], name='job_jobappl_applica_56f54d_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job', 'status'], name='job_jobappl_job_id_168928_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['status_changed_at'], name='job_jobappl_status__3e3c01_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['status_change_read'], name='job_jobappl_status__0c97bf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='jobapplication',
            unique_together={('job', 'applicant_email')},
        ),
        migrations.AlterUniqueTogether(
            name='savedjob',
            unique_together={('job_seeker', 'job')},
        ),
    ]
